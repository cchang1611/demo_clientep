name: CI pipeline
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  fortify_analisis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fortify ScanCentral Scan
        uses: fortify/gha-setup-scancentral-client@v1.2.0
        with: 
          version: 20.2.0          
        #client-auth-token: # ScanCentral client authentication token. optional
  build:
    needs: [fortify_analisis]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ['8', '11']  # Definimos una matriz con las versiones de Java
        maven-version : ['3.3', '3.8.1'] # Definimos una matriz con las versiones de Maven
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2  
        with:
           java-version: ${{ matrix.java-version }} #version de java.
           distribution: ${{ matrix.java-version == '11' && 'adopt-openj9' || 'adopt' }}
      - name: Set up Maven
        run: |
          if [[ "${{ matrix.maven-version }}" == "3.3" ]]; then
             wget -q http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
             tar xf apache-maven-3.3.9-bin.tar.gz
             export PATH="$PWD/apache-maven-3.3.9/bin:$PATH"
          else
             wget -q http://archive.apache.org/dist/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz
             tar xf apache-maven-3.8.1-bin.tar.gz
             export PATH="$PWD/apache-maven-3.8.1/bin:$PATH"
          fi
      - name: Download settings.xml
        run: |
            mkdir -p /home/runner/.m2/repository
            curl -o /home/runner/.m2/repository/settings.xml -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} https://nexus.james.lab.zivra.com/repository/cchang_artifacts/archivos/settings/2.0/settings-2.0.xml
            cat /home/runner/.m2/repository/settings.xml
      - name: Build application con Maven
        run:  mvn clean install
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \ 
             -Dsonar.organization=cchang1611 \ 
             -Dsonar.projectKey=cchang1611_demo_clientep \
             -Dsonar.host.url=https://sonarcloud.io 
